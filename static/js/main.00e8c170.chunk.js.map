{"version":3,"sources":["redux/actions.js","redux/operations.js","components/Form/Form.jsx","redux/selectors.js","components/ListContacts/ListContacts.jsx","components/Filter/Filter.jsx","App.jsx","redux/reducer.js","redux/store.jsx","index.js"],"names":["changeFilter","createAction","AddContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","contacts","data","message","connect","dispatch","onSubmit","obj","name","number","contact","post","then","catch","error","addContact","useState","setName","setNumber","type","e","preventDefault","value","pattern","title","required","onChange","currentTarget","getFilteredContacts","createSelector","state","filter","entities","normalizedFilter","toLowerCase","includes","onClick","id","contactID","delete","useDispatch","useEffect","useSelector","selectors","length","map","target","Filter","uuidv4","htmlFor","App","className","createReducer","fulfilled","action","payload","isLoading","pending","rejected","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00e8c170.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\"\n\nexport const changeFilter=createAction('contacts/changeFilter')\n\nexport const AddContactRequest=createAction('contacts/AddContactRequest')\nexport const addContactSuccess=createAction('contacts/addContactSuccess')\nexport const addContactError=createAction('contacts/addContactError')\n\nexport const deleteContactRequest=createAction('contacts/deleteContactRequest')\nexport const deleteContactSuccess=createAction('contacts/deleteContactSuccess')\nexport const deleteContactError=createAction('contacts/deleteContactError')","import axios from 'axios';\r\nimport {\r\n  AddContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess, \r\n  deleteContactError\r\n} from './actions';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nconst URL = 'http://localhost:4343';\r\naxios.defaults.baseURL = URL;\r\n\r\n\r\nexport const fetchContacts=createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, {rejectWithValue}) => {\r\n    try {\r\n      const contacts =await axios.get('/contacts')\r\n      return contacts.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.message)\r\n    }\r\n   \r\n  }\r\n)\r\n\r\nexport const addContact=({name, number})=>dispatch=>{\r\n  const contact={\r\n      name,\r\n      number\r\n  }\r\n  dispatch(AddContactRequest())\r\n  axios\r\n  .post('/contacts', contact)\r\n  .then(({data})=>dispatch(addContactSuccess(data)))\r\n  .catch(error=>dispatch(addContactError(error.message)))\r\n}\r\n\r\nexport const deleteContact=contactID=>dispatch=>{\r\ndispatch(deleteContactRequest())\r\naxios\r\n.delete(`contacts/${contactID}`)\r\n.then(()=>dispatch(deleteContactSuccess(contactID)))\r\n.catch(error=>dispatch(deleteContactError(error.message)))\r\n}","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {addContact} from 'redux/operations'\r\n\r\n function Form({ onSubmit }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const handleNameChange = (e) => setName(e.currentTarget.value)\r\n  const handleNumberChange = (e) => setNumber(e.currentTarget.value)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit({ name, number })\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n  return (\r\n    <form type=\"submit\" onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )\r\n}\r\nconst mapDispatchToProrps = (dispatch) => ({\r\n  onSubmit: (obj) => dispatch(addContact(obj)),\r\n})\r\nexport default connect(null, mapDispatchToProrps)(Form)","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport { createSelector } from \"reselect\"\r\n\r\nexport const getContacts= state => state.contacts.entities\r\nexport const getFilter= state => state.filter\r\n\r\nexport const getFilteredContacts= createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts)=>{\r\n        if(filter){\r\n            const normalizedFilter=filter.toLowerCase()\r\n            return contacts.filter(contact=>contact.name.toLowerCase().includes(normalizedFilter))\r\n        }\r\n        return contacts\r\n    }\r\n)","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {fetchContacts, deleteContact} from 'redux/operations'\r\nimport * as selectors from 'redux/selectors'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ListContacts({onClick}) {\r\n   const dispatch = useDispatch()\r\n   useEffect(() => {\r\n    dispatch(fetchContacts())\r\n   }, [dispatch])\r\n\r\n   const contacts=useSelector(selectors.getFilteredContacts)\r\n\r\n  return (<ul>\r\n    {contacts.length>0 && contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name} {number}\r\n        <button type=\"button\" id={id} onClick={(e)=>\r\n          onClick(e.target.id)\r\n          }>\r\n          delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>)\r\n}\r\n\r\n// ListContacts.propTypes = {\r\n//   contacts: PropTypes.oneOfType([\r\n//     PropTypes.string,\r\n//     PropTypes.number,\r\n//     PropTypes.array,\r\n//   ]),\r\n//   onClick: PropTypes.func.isRequired,\r\n// };\r\n\r\n\r\nconst mapDispatchToProrps = (dispatch) => ({\r\n  onClick: (id) => dispatch(deleteContact(id)),\r\n})\r\nexport default connect(null, mapDispatchToProrps)(ListContacts)\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {changeFilter} from \"redux/actions\";\r\nimport { useSelector,useDispatch} from \"react-redux\";\r\n\r\nexport default  function Filter (){\r\n  const id = uuidv4();\r\n  const dispatch=useDispatch()\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>   </label>\r\n      <input id={id}\r\n       type=\"text\"  \r\n       onChange={(e)=>{\r\n         dispatch(changeFilter(e.target.value))\r\n       }} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: (e) => dispatch(actions.changeFilter(e.target.value))\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"./components/Form/Form\";\r\nimport ListContacts from \"./components/ListContacts/ListContacts\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h3>Phonebook</h3>\r\n      <Form />\r\n      <h3>Contacts</h3>\r\n      <p>filter via name</p>\r\n      <Filter />\r\n      <ListContacts />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { createReducer, createSlice } from '@reduxjs/toolkit'\r\nimport { fetchContacts } from './operations'\r\nimport { changeFilter } from './actions'\r\nimport {\r\n  AddContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError\r\n} from './actions'\r\nconst entities = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => {\r\n    return action.payload\r\n  },\r\n  [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n  [deleteContactSuccess]:(state, {payload})=>state.filter(({id})=>id!==payload)\r\n})\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [AddContactRequest]:()=>true,\r\n  [addContactSuccess]:()=>false,\r\n  [addContactError]:()=>false,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n})\r\nexport const filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n})\r\nexport default combineReducers({\r\n  entities,\r\n  isLoading,\r\n  error,\r\n})\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactsReducer, {filter} from './reducer'\r\n\r\nexport const store= configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter\r\n  },\r\n})\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={\"...Loading\"} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}